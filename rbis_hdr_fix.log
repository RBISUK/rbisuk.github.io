+ set -euo pipefail
+ log '0) Ensure repo root and Node env'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '0) Ensure repo root and Node env'

[1;34mâ–¶ 0) Ensure repo root and Node env[0m
+ '[' -f package.json ']'
+ command -v node
+ command -v npm
+ log '1) Create required dirs'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '1) Create required dirs'

[1;34mâ–¶ 1) Create required dirs[0m
+ mkdir -p app/hdr app/hdr/help app/api/veridex/start components/hdr verdiex/flows app/veridex
+ log '2) Remove App/Pages router conflict for /hdr'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '2) Remove App/Pages router conflict for /hdr'

[1;34mâ–¶ 2) Remove App/Pages router conflict for /hdr[0m
+ '[' -f pages/hdr.tsx ']'
+ '[' -d pages/hdr ']'
+ log '3) Write HDR header'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '3) Write HDR header'

[1;34mâ–¶ 3) Write HDR header[0m
+ cat
+ log '4) Write HDR layout'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '4) Write HDR layout'

[1;34mâ–¶ 4) Write HDR layout[0m
+ cat
+ log '5) Write HDR landing (button-only -> Verdiex)'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '5) Write HDR landing (button-only -> Verdiex)'

[1;34mâ–¶ 5) Write HDR landing (button-only -> Verdiex)[0m
+ cat
+ log '6) Write HDR help'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '6) Write HDR help'

[1;34mâ–¶ 6) Write HDR help[0m
+ cat
+ log '7) Verdiex start route (redirect to hosted Verdiex)'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '7) Verdiex start route (redirect to hosted Verdiex)'

[1;34mâ–¶ 7) Verdiex start route (redirect to hosted Verdiex)[0m
+ cat
+ log '8) Minimal flow (doc/local fallback)'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '8) Minimal flow (doc/local fallback)'

[1;34mâ–¶ 8) Minimal flow (doc/local fallback)[0m
+ cat
+ log '9) Ensure Tailwind utilities exist (safe if already present)'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '9) Ensure Tailwind utilities exist (safe if already present)'

[1;34mâ–¶ 9) Ensure Tailwind utilities exist (safe if already present)[0m
+ mkdir -p app
+ grep -q '@import "tailwindcss"' app/globals.css
+ log 'app/globals.css already imports tailwindcss'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' 'app/globals.css already imports tailwindcss'

[1;34mâ–¶ app/globals.css already imports tailwindcss[0m
+ log '10) Root layout background (visual sanity)'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '10) Root layout background (visual sanity)'

[1;34mâ–¶ 10) Root layout background (visual sanity)[0m
+ cat
+ log '11) Build (show full error if it fails)'
+ printf '\n\033[1;34mâ–¶ %s\033[0m\n' '11) Build (show full error if it fails)'

[1;34mâ–¶ 11) Build (show full error if it fails)[0m
+ set +e
+ npm run build

> rbis-site@0.1.0 build
> next build

   â–² Next.js 15.5.3

 â¨¯ Conflicting app and page file was found, please remove the conflicting files to continue:
 â¨¯   "pages/veridex.tsx" - "app/veridex/page.tsx"
+ code=1
+ set -e
+ '[' 1 -ne 0 ']'
+ fail 'Build failed. Scroll up for the first TS/Webpack error.'
+ printf '\n\033[1;31mâœ– %s\033[0m\n' 'Build failed. Scroll up for the first TS/Webpack error.'

[1;31mâœ– Build failed. Scroll up for the first TS/Webpack error.[0m
+ exit 1
