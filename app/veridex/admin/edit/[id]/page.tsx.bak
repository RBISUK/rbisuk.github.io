"use client";
import { useEffect, useState } from "react";
import { useParams, useRouter } from "next/navigation";

type Funnel = { id:string; name:string; steps:any[]; [k:string]:any };

export default function Editor(){
  const params = useParams<{ id:string }>();
  const router = useRouter();
  const [jsonText, setJsonText] = useState<string>("");
  const [isNew, setIsNew] = useState<boolean>(false);
  const [error, setError] = useState<string| null>(null);

  useEffect(()=>{
    const id = params.id;
    if (id === "new") {
      setIsNew(true);
      setJsonText(JSON.stringify({
        id: "new-funnel-id",
        name: "New Funnel",
        steps: [
          { id:"entry", title:"Welcome", prompt:"Choose one", type:"single",
            options:[ { value:"a", label:"Option A", next:"finish" }, { value:"b", label:"Option B", next:"finish" } ],
            next:"finish"
          },
          { id:"finish", title:"Done", prompt:"Thanks!", type:"text" }
        ],
        compliance: { region:"UK", regimes:["GDPR"] }
      }, null, 2));
      return;
    }
    fetch(`/api/admin/funnels/${id}`, { cache:"no-store" })
      .then(r=> r.ok ? r.json() : Promise.reject("Not found"))
      .then(d=> setJsonText(JSON.stringify(d.funnel, null, 2)))
      .catch(()=> setError("Could not load funnel"));
  },[params.id]);

  async function save() {
    try {
      const obj = JSON.parse(jsonText) as Funnel;
      if (isNew) {
        const r = await fetch("/api/admin/funnels", {
          method:"POST", headers:{ "Content-Type":"application/json" }, body: JSON.stringify(obj)
        });
        if (!r.ok) throw new Error("Save failed");
        router.push(`/veridex/admin/edit/${obj.id}`);
      } else {
        const r = await fetch(`/api/admin/funnels/${obj.id}`, {
          method:"PUT", headers:{ "Content-Type":"application/json" }, body: JSON.stringify(obj)
        });
        if (!r.ok) throw new Error("Save failed");
        alert("Saved");
      }
    } catch (e:any) {
      alert(e.message || "Invalid JSON");
    }
  }

  return (
    <main className="container py-10">
      <h1 className="text-2xl font-bold">Funnel Editor</h1>
      {error && <p className="mt-2 text-red-700">{error}</p>}
      <textarea value={jsonText} onChange={e=>setJsonText(e.target.value)}
        className="mt-4 w-full h-[60vh] rounded-lg border p-3 font-mono text-sm" />
      <div className="mt-3 flex gap-2">
        <button onClick={save} className="btn-primary">Save</button>
        <button onClick={()=>history.back()} className="btn border border-neutral-300">Back</button>
      </div>
      <p className="mt-6 text-sm text-neutral-600">
        Tip: branch with <code>next</code> on options, and add <code>compliance.regimes</code> (e.g. ["GDPR","SRA","FCA","ASA"]).
      </p>
    </main>
  );
}
